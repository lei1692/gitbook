{"./":{"url":"./","title":"Introduction","keywords":"","body":"有太多的未知等着去探索 "},"Java/第一章.html":{"url":"Java/第一章.html","title":"第一章","keywords":"","body":"第一章 这是第一章第内容 package mypack; //相当于一个目录 public class HelloWorld{ public static void main(String[] args) { System.out.println(\"Hello World!\"); } } diyige dierge disange 1 2 3 "},"Java/第二章.html":{"url":"Java/第二章.html","title":"第二章","keywords":"","body":"第二章 这是第二章第内容 "},"Java/第三章.html":{"url":"Java/第三章.html","title":"第三章","keywords":"","body":"第三章 第三章的java 找个诗句 1 前出师表 诸葛亮 臣亮言：先帝创业未半，而中道崩殂；今天下三分，益州疲敝，此诚 危急存亡之秋也。然侍卫之臣，不懈于内；忠志之士，忘身于外者：盖追 先帝之殊遇，欲报之于陛下也。诚宜开张圣听，以光先帝遗德，恢弘志士 之气；不宜妄自菲薄，引喻失义，以塞忠谏之路也。宫中府中，俱为一体； 陟罚臧否，不宜异同：若有作奸犯科，及为忠善者，宜付有司，论其刑赏， 以昭陛下平明之治；不宜偏私，使内外异法也。侍中、侍郎郭攸之、费依、 董允等，此皆良实，志虑忠纯，是以先帝简拔以遗陛下：愚以为宫中之事， 事无大小，悉以咨之，然后施行，必得裨补阙漏，有所广益。将军向宠， 性行淑均，晓畅军事，试用之于昔日，先帝称之曰“能”，是以众议举宠 为督：愚以为营中之事，事无大小，悉以咨之，必能使行阵和穆，优劣得 所也。亲贤臣，远小人，此先汉所以兴隆也；亲小人，远贤臣，此后汉所 以倾颓也。先帝在时，每与臣论此事，未尝不叹息痛恨于桓、灵也！侍中、 尚书、长史、参军，此悉贞亮死节之臣也，愿陛下亲之、信之，则汉室之 隆，可计日而待也。 臣本布衣，躬耕南阳，苟全性命于乱世，不求闻达于诸侯。先帝不以 臣卑鄙，猥自枉屈，三顾臣于草庐之中，谘臣以当世之事，由是感激，遂 许先帝以驱驰。后值倾覆，受任于败军之际，奉命于危难之间：尔来二十 有一年矣。先帝知臣谨慎，故临崩寄臣以大事也。受命以来，夙夜忧虑， 恐付托不效，以伤先帝之明；故五月渡泸，深入不毛。今南方已定，甲兵 已足，当奖帅三军，北定中原，庶竭驽钝，攘除奸凶，兴复汉室，还于旧 都：此臣所以报先帝而忠陛下之职分也。至于斟酌损益，进尽忠言，则攸 之、依、允等之任也。愿陛下托臣以讨贼兴复之效，不效则治臣之罪，以 告先帝之灵；若无兴复之言，则责攸之、依、允等之咎，以彰其慢。陛下 亦宜自谋，以谘诹善道，察纳雅言，深追先帝遗诏。臣不胜受恩感激！今 当远离，临表涕泣，不知所云。 后出师表 诸葛亮 先帝虑汉、贼不两立，王业不偏安，故托臣以讨贼也。以先帝之明， 量臣之才，故知臣伐贼，才弱敌强也。然不伐贼，王业亦亡。惟坐而待亡， 孰与伐之？是故托臣而弗疑也。臣受命之日，寝不安席，食不甘味；思惟 北征，宜先入南：故五月渡泸，深入不毛，并日而食。——臣非不自惜也： 顾王业不可偏安于蜀都，故冒危难以奉先帝之遗意。而议者谓为非计。今 贼适疲于西，又务于东，兵法“乘劳”：此进趋之时也。谨陈其事如左： 高帝明并日月，谋臣渊深，然涉险被创，危然后安；今陛下未及高帝， 谋臣不如良、平，而欲以长策取胜，坐定天下：此臣之未解一也。刘繇、 王朗，各据州郡，论安言计，动引圣人，群疑满腹，众难塞胸；今岁不战， 明年不征，使孙策坐大，遂并江东：此臣之未解二也。曹操智计，殊绝于 人，其用兵也，仿怫孙、吴，然困于南阳，险于乌巢，危于祁连，逼于黎 阳，几败北山，殆死潼关，然后伪定一时耳；况臣才弱，而欲以不危而定 之：此臣之未解三也。曹操五攻昌霸不下，四越巢湖不成，任用李服而李 服图之，委任夏侯而夏侯败亡，先帝每称操为能，犹有此失；况臣弩下， 何能必胜：此臣之未解四也。自臣到汉中，中间期年耳，然丧赵云、阳群、 马玉、阎芝、丁立、白寿、刘合、邓铜等，及驱长屯将七十余人，突将无 前，丛叟、青羌，散骑武骑一千余人，此皆数十年之内，所纠合四方之精 锐，非一州之所有；若复数年，则损三分之二也。——当何以图敌：此臣 之未解五也。今民穷兵疲，而事不可息；事不可息，则住与行，劳费正等； 而不及今图之，欲以一州之地，与贼持久：此臣之未解六也。 夫难平者，事也。昔先帝败军于楚，当此时，曹操拊手，谓天下已定。 ——然后先帝东连吴、越，西取巴、蜀，举兵北征，夏侯授首：此操之失 计，而汉事将成也。——然后吴更违盟，关羽毁败，秭归蹉跌，曹丕称帝： 凡事如是，难可逆见。臣鞠躬尽瘁，死而后已；至于成败利钝，非臣之明 所能逆睹也。 前出师表 诸葛亮 臣亮言：先帝创业未半，而中道崩殂；今天下三分，益州疲敝，此诚 危急存亡之秋也。然侍卫之臣，不懈于内；忠志之士，忘身于外者：盖追 先帝之殊遇，欲报之于陛下也。诚宜开张圣听，以光先帝遗德，恢弘志士 之气；不宜妄自菲薄，引喻失义，以塞忠谏之路也。宫中府中，俱为一体； 陟罚臧否，不宜异同：若有作奸犯科，及为忠善者，宜付有司，论其刑赏， 以昭陛下平明之治；不宜偏私，使内外异法也。侍中、侍郎郭攸之、费依、 董允等，此皆良实，志虑忠纯，是以先帝简拔以遗陛下：愚以为宫中之事， 事无大小，悉以咨之，然后施行，必得裨补阙漏，有所广益。将军向宠， 性行淑均，晓畅军事，试用之于昔日，先帝称之曰“能”，是以众议举宠 为督：愚以为营中之事，事无大小，悉以咨之，必能使行阵和穆，优劣得 所也。亲贤臣，远小人，此先汉所以兴隆也；亲小人，远贤臣，此后汉所 以倾颓也。先帝在时，每与臣论此事，未尝不叹息痛恨于桓、灵也！侍中、 尚书、长史、参军，此悉贞亮死节之臣也，愿陛下亲之、信之，则汉室之 隆，可计日而待也。 臣本布衣，躬耕南阳，苟全性命于乱世，不求闻达于诸侯。先帝不以 臣卑鄙，猥自枉屈，三顾臣于草庐之中，谘臣以当世之事，由是感激，遂 许先帝以驱驰。后值倾覆，受任于败军之际，奉命于危难之间：尔来二十 有一年矣。先帝知臣谨慎，故临崩寄臣以大事也。受命以来，夙夜忧虑， 恐付托不效，以伤先帝之明；故五月渡泸，深入不毛。今南方已定，甲兵 已足，当奖帅三军，北定中原，庶竭驽钝，攘除奸凶，兴复汉室，还于旧 都：此臣所以报先帝而忠陛下之职分也。至于斟酌损益，进尽忠言，则攸 之、依、允等之任也。愿陛下托臣以讨贼兴复之效，不效则治臣之罪，以 告先帝之灵；若无兴复之言，则责攸之、依、允等之咎，以彰其慢。陛下 亦宜自谋，以谘诹善道，察纳雅言，深追先帝遗诏。臣不胜受恩感激！今 当远离，临表涕泣，不知所云。 后出师表 诸葛亮 先帝虑汉、贼不两立，王业不偏安，故托臣以讨贼也。以先帝之明， 量臣之才，故知臣伐贼，才弱敌强也。然不伐贼，王业亦亡。惟坐而待亡， 孰与伐之？是故托臣而弗疑也。臣受命之日，寝不安席，食不甘味；思惟 北征，宜先入南：故五月渡泸，深入不毛，并日而食。——臣非不自惜也： 顾王业不可偏安于蜀都，故冒危难以奉先帝之遗意。而议者谓为非计。今 贼适疲于西，又务于东，兵法“乘劳”：此进趋之时也。谨陈其事如左： 高帝明并日月，谋臣渊深，然涉险被创，危然后安；今陛下未及高帝， 谋臣不如良、平，而欲以长策取胜，坐定天下：此臣之未解一也。刘繇、 王朗，各据州郡，论安言计，动引圣人，群疑满腹，众难塞胸；今岁不战， 明年不征，使孙策坐大，遂并江东：此臣之未解二也。曹操智计，殊绝于 人，其用兵也，仿怫孙、吴，然困于南阳，险于乌巢，危于祁连，逼于黎 阳，几败北山，殆死潼关，然后伪定一时耳；况臣才弱，而欲以不危而定 之：此臣之未解三也。曹操五攻昌霸不下，四越巢湖不成，任用李服而李 服图之，委任夏侯而夏侯败亡，先帝每称操为能，犹有此失；况臣弩下， 何能必胜：此臣之未解四也。自臣到汉中，中间期年耳，然丧赵云、阳群、 马玉、阎芝、丁立、白寿、刘合、邓铜等，及驱长屯将七十余人，突将无 前，丛叟、青羌，散骑武骑一千余人，此皆数十年之内，所纠合四方之精 锐，非一州之所有；若复数年，则损三分之二也。——当何以图敌：此臣 之未解五也。今民穷兵疲，而事不可息；事不可息，则住与行，劳费正等； 而不及今图之，欲以一州之地，与贼持久：此臣之未解六也。 夫难平者，事也。昔先帝败军于楚，当此时，曹操拊手，谓天下已定。 ——然后先帝东连吴、越，西取巴、蜀，举兵北征，夏侯授首：此操之失 计，而汉事将成也。——然后吴更违盟，关羽毁败，秭归蹉跌，曹丕称帝： 凡事如是，难可逆见。臣鞠躬尽瘁，死而后已；至于成败利钝，非臣之明 所能逆睹也。 前出师表 诸葛亮 臣亮言：先帝创业未半，而中道崩殂；今天下三分，益州疲敝，此诚 危急存亡之秋也。然侍卫之臣，不懈于内；忠志之士，忘身于外者：盖追 先帝之殊遇，欲报之于陛下也。诚宜开张圣听，以光先帝遗德，恢弘志士 之气；不宜妄自菲薄，引喻失义，以塞忠谏之路也。宫中府中，俱为一体； 陟罚臧否，不宜异同：若有作奸犯科，及为忠善者，宜付有司，论其刑赏， 以昭陛下平明之治；不宜偏私，使内外异法也。侍中、侍郎郭攸之、费依、 董允等，此皆良实，志虑忠纯，是以先帝简拔以遗陛下：愚以为宫中之事， 事无大小，悉以咨之，然后施行，必得裨补阙漏，有所广益。将军向宠， 性行淑均，晓畅军事，试用之于昔日，先帝称之曰“能”，是以众议举宠 为督：愚以为营中之事，事无大小，悉以咨之，必能使行阵和穆，优劣得 所也。亲贤臣，远小人，此先汉所以兴隆也；亲小人，远贤臣，此后汉所 以倾颓也。先帝在时，每与臣论此事，未尝不叹息痛恨于桓、灵也！侍中、 尚书、长史、参军，此悉贞亮死节之臣也，愿陛下亲之、信之，则汉室之 隆，可计日而待也。 臣本布衣，躬耕南阳，苟全性命于乱世，不求闻达于诸侯。先帝不以 臣卑鄙，猥自枉屈，三顾臣于草庐之中，谘臣以当世之事，由是感激，遂 许先帝以驱驰。后值倾覆，受任于败军之际，奉命于危难之间：尔来二十 有一年矣。先帝知臣谨慎，故临崩寄臣以大事也。受命以来，夙夜忧虑， 恐付托不效，以伤先帝之明；故五月渡泸，深入不毛。今南方已定，甲兵 已足，当奖帅三军，北定中原，庶竭驽钝，攘除奸凶，兴复汉室，还于旧 都：此臣所以报先帝而忠陛下之职分也。至于斟酌损益，进尽忠言，则攸 之、依、允等之任也。愿陛下托臣以讨贼兴复之效，不效则治臣之罪，以 告先帝之灵；若无兴复之言，则责攸之、依、允等之咎，以彰其慢。陛下 亦宜自谋，以谘诹善道，察纳雅言，深追先帝遗诏。臣不胜受恩感激！今 当远离，临表涕泣，不知所云。 后出师表 诸葛亮 先帝虑汉、贼不两立，王业不偏安，故托臣以讨贼也。以先帝之明， 量臣之才，故知臣伐贼，才弱敌强也。然不伐贼，王业亦亡。惟坐而待亡， 孰与伐之？是故托臣而弗疑也。臣受命之日，寝不安席，食不甘味；思惟 北征，宜先入南：故五月渡泸，深入不毛，并日而食。——臣非不自惜也： 顾王业不可偏安于蜀都，故冒危难以奉先帝之遗意。而议者谓为非计。今 贼适疲于西，又务于东，兵法“乘劳”：此进趋之时也。谨陈其事如左： 高帝明并日月，谋臣渊深，然涉险被创，危然后安；今陛下未及高帝， 谋臣不如良、平，而欲以长策取胜，坐定天下：此臣之未解一也。刘繇、 王朗，各据州郡，论安言计，动引圣人，群疑满腹，众难塞胸；今岁不战， 明年不征，使孙策坐大，遂并江东：此臣之未解二也。曹操智计，殊绝于 人，其用兵也，仿怫孙、吴，然困于南阳，险于乌巢，危于祁连，逼于黎 阳，几败北山，殆死潼关，然后伪定一时耳；况臣才弱，而欲以不危而定 之：此臣之未解三也。曹操五攻昌霸不下，四越巢湖不成，任用李服而李 服图之，委任夏侯而夏侯败亡，先帝每称操为能，犹有此失；况臣弩下， 何能必胜：此臣之未解四也。自臣到汉中，中间期年耳，然丧赵云、阳群、 马玉、阎芝、丁立、白寿、刘合、邓铜等，及驱长屯将七十余人，突将无 前，丛叟、青羌，散骑武骑一千余人，此皆数十年之内，所纠合四方之精 锐，非一州之所有；若复数年，则损三分之二也。——当何以图敌：此臣 之未解五也。今民穷兵疲，而事不可息；事不可息，则住与行，劳费正等； 而不及今图之，欲以一州之地，与贼持久：此臣之未解六也。 夫难平者，事也。昔先帝败军于楚，当此时，曹操拊手，谓天下已定。 ——然后先帝东连吴、越，西取巴、蜀，举兵北征，夏侯授首：此操之失 计，而汉事将成也。——然后吴更违盟，关羽毁败，秭归蹉跌，曹丕称帝： 凡事如是，难可逆见。臣鞠躬尽瘁，死而后已；至于成败利钝，非臣之明 所能逆睹也。 "},"Nginx/SUMMARY.html":{"url":"Nginx/SUMMARY.html","title":"Nginx","keywords":"","body":"Nginx学习 "},"Nginx/基础篇/Nginx简介.html":{"url":"Nginx/基础篇/Nginx简介.html","title":"Nginx简介","keywords":"","body":"Nginx简介 背景介绍 Nginx（发音为 \"engine-x\"）是一个开源的、高性能的 HTTP 服务器和反向代理服务器，也是一个 IMAP/POP3/SMTP 代理服务器。 它由 Igor Sysoev 于 2002 年开始开发，目的是解决 C10K 问题，即同时处理数万个网络连接的挑战。 Nginx 是一个非常流行的 web 服务器软件，通常被用于提供静态内容、负载均衡、以及作为反向代理等。 什么是web服务器 Web 服务器是一种能够处理 HTTP 请求并返回 HTTP 响应的软件或硬件。 它们托管和提供网站和 web 应用程序的内容，使得用户能够通过 web 浏览器访问这些内容。 web 服务器的一些主要功能和组件： 处理 HTTP 请求和返回响应: Web 服务器的核心功能是接收来自客户端（通常是 web 浏览器）的 HTTP 请求，处理这些请求，然后返回适当的 HTTP 响应。 这些响应通常包括 HTML 文件、图片、样式表（CSS）、JavaScript 文件等。 提供静态和动态内容: 静态内容：静态内容是预先创建的文件，如 HTML、CSS 和 JavaScript 文件、图像和视频。 Web 服务器可以直接为请求提供这些文件，无需任何额外的处理。 动态内容：动态内容是在请求时生成的，通常基于数据库数据或用户输入。 Web 服务器可能需要与应用服务器和数据库服务器交互以生成动态内容。 安全: Web 服务器还负责处理安全相关的任务，例如 SSL/TLS 握手（用于 HTTPS）、身份验证和授权。 日志和监控: 记录请求和响应，以便于分析、监控和调试。 日志文件包含了有关服务器活动和性能的重要信息。 配置和管理: Web 服务器提供了配置选项，允许管理员控制如何处理请求、管理连接、配置安全设置等。 负载均衡和反向代理: 在高流量环境中，web 服务器可以用作反向代理和/或负载均衡器，以分发流量到其他服务器，并确保服务的可靠性和性能。 与应用服务器的交互: 在某些配置中，web 服务器可能会将请求传递给后端的应用服务器，应用服务器再生成动态内容，并将内容返回给 web 服务器，最后由 web 服务器将内容传递给客户端。 常见的 Web 服务器软件包括： Apache HTTP Server: 一个开源、跨平台的 web 服务器软件。 Nginx: 一个高性能、开源、跨平台的 HTTP 服务器和反向代理。 Microsoft IIS (Internet Information Services): 一个用于 Windows Server 的 web 服务器和应用服务器。 Apache Tomcat: 一个用于 Java 应用的 web 服务器和 servlet 容器。 Web 服务器是 web 应用架构的基础，它们处理客户端的请求，提供请求的内容，并确保 web 应用的安全和可靠。 HTTP/POP3/SMTP/IMAP协议 HTTP (HyperText Transfer Protocol)超文本传输协议: 用途：HTTP 是用于传输超文本（HTML 和相关资源）的协议，主要用于 web 浏览器和 web 服务器之间的通信。 特点： 无状态：每个 HTTP 请求都是独立的，服务器不保留之前请求的任何信息。 可靠：HTTP 基于 TCP，确保数据的可靠传输。 简单和灵活：HTTP 允许多种请求方法（例如 GET、POST、PUT、DELETE）、状态代码和头字段。 POP3 (Post Office Protocol version 3)邮局协议的第三个版本: 用途：POP3 是一种用于从邮件服务器检索邮件的协议。 特点： 简单：POP3 适用于简单的邮件检索需求，它允许用户下载邮件并在本地存储。 单一设备：POP3 更适合于单一设备访问邮件，因为它通常会从服务器删除邮件。 SMTP (Simple Mail Transfer Protocol)简单邮件传输协议: 用途：SMTP 是一种用于发送电子邮件的协议，通常用于邮件客户端到邮件服务器或邮件服务器到邮件服务器之间的通信。 特点： 可靠：SMTP 也基于 TCP，确保邮件的可靠传输。 简单：SMTP 是一个简单的文本协议，易于实现和调试。 IMAP (Internet Mail Access Protocol)交互式邮件存取协议: 用途：IMAP 是一种更先进的邮件检索协议，允许用户在多个设备上访问邮件。 特点： 多设备同步：IMAP 允许在多个设备上保持邮件同步，因为邮件保留在服务器上。 高级功能：IMAP 提供了高级的邮件管理功能，如邮件标记、文件夹和搜索。 这些协议中的每一个都是为解决特定的通信问题而设计的。 HTTP 主要用于 web 通信，而 POP3、SMTP 和 IMAP 主要用于电子邮件的发送和接收。 在现代通信系统中，这些协议通常会一起工作，以提供丰富和可靠的用户体验。 正向代理和反向代理 正向代理 是一个位于客户端和原始服务器(origin server)之间的服务器，为了从原始服务器取得内容，客户端向代理服务器发送一个请求并指定目标(原始服务器)，然后代理向原始服务器转交请求并将获得的内容返回给客户端。客户端才能使用正向代理。 反向代理 反向代理服务器位于用户与目标（原始）服务器之间，但是对于用户而言，反向代理服务器就相当于目标服务器，即用户直接访问反向代理服务器就可以获得目标服务器的资源。 同时，用户不需要知道目标服务器的地址，也无须在用户端作任何设定。 反向代理服务器通常可用来作为Web加速，即使用反向代理作为Web服务器的前置机来降低网络和服务器的负载，提高访问效率。 正向代理和反向代理的区别 1. 代理对象: 正向代理：在客户端和目标服务器之间充当中介，代理客户端发出的请求。 客户端直接连接到代理服务器，然后代理服务器连接到目标服务器以获取客户端所需的资源。 反向代理：在目标服务器和客户端之间充当中介，代理来自客户端的请求到内部服务器。 客户端连接到反向代理服务器，以为它是实际的目标服务器，但实际上反向代理将请求转发到内部服务器并返回结果。 2. 透明度: 正向代理：客户端通常知道正向代理的存在，并且需要配置以通过代理连接。 反向代理：对于客户端来说，反向代理是透明的，客户端通常不知道反向代理的存在。 3. 使用场景: 正向代理：常用于缓存、过滤内容、网络访问控制、避免IP限制等。 例如：学校或公司的网络管理员可能会设置正向代理来控制网络访问和过滤不适当的内容。 反向代理：常用于负载均衡、缓存静态内容、保护和隐藏内部服务器、SSL终端处理等。 例如：大型网站可能会使用反向代理来分发客户端请求到不同的服务器，以确保平滑运行和快速响应。 4. 部署位置: 正向代理：通常部署在网络的客户端侧。 反向代理：通常部署在网络的服务器侧。 5. 地址转换: 正向代理：可能会修改客户端的请求地址。 反向代理：可能会修改请求的目标地址。 Nginx的优点 速度更快、并发更高 单次请求或者高并发请求的环境下，Nginx都会比其他Web服务器响应 的速度更快。 一方面在正常情况下，单次请求会得到更快的响应，另一 方面，在高峰期(如有数以万计的并发请求)，Nginx比其他Web服务器更快的响应请求。 Nginx之所以有这么高的并发处理能力和这么好的性能原因在于Nginx采用了多进程和I/O多路复用(epoll)的底层实现。 配置简单，扩展性强 Nginx的设计极具扩展性，它本身就是由很多模块组成，这些模块的使用可以通过配置文件的配置来添加。 这些模块有官方提供的也有第三方提供的模块，如果需要完全可以开发服务自己业务特性的定制模块。 高可靠性 Nginx采用的是多进程模式运行，其中有一个master主进程和N多个 worker进程，worker进程的数量我们可以手动设置，每个worker进程之间都是相互独立提供服务。 并且master主进程可以在某一个worker进程出错时，快速去\"拉起\"新的worker进程提供服务。 热部署 现在互联网项目都要求以7*24小时进行服务的提供，针对于这一要求， Nginx也提供了热部署功能，即可以在Nginx不停止的情况下，对Nginx 进行文件升级、更新配置和更换日志文件等功能。 成本低、BSD许可证 BSD是一个开源的许可证，世界上的开源许可证有很多，现在比较流行 的有六种分别是GPL、BSD、MIT、Mozilla、Apache、LGPL。 Nginx本身是开源的，我们不仅可以免费的将Nginx应用在商业领域，而且还可以在项目中直接修改Nginx的源码来定制自己的特殊要求。 这些点也都是Nginx为什么能吸引无数开发者继续为Nginx来贡献自己的智慧和青春。 Nginx的功能特性及常用功能 Nginx提供的基本功能服务从大体上归纳为\"基本HTTP服务\"、“高级HTTP服务”和\"邮件服务\"等三大类。 基本HTTP服务 Nginx可以提供基本HTTP服务，可以作为HTTP代理服务器和反向代理服务器，支持通过缓存加速访问，可以完成简单的负载均衡和容错，支持包过滤功能，支持SSL等。 处理静态文件、处理索引文件以及支持自动索引; 提供反向代理服务器，并可以使用缓存加上反向代理，同时完成负载均衡和容错; 提供对FastCGI、memcached等服务的缓存机制，同时完成负载均衡和容错; 使用Nginx的模块化特性提供过滤器功能。 Nginx基本过滤器包括 gzip压缩、ranges支持、chunked响应、XSLT、SSI以及图像缩放等。其中针对包含多个SSI的页面，经由FastCGI或反向代理，SSI过滤器可以并行处理。 支持HTTP下的安全套接层安全协议SSL. 支持基于加权和依赖的优先权的HTTP/2 Nginx 的一些关键特性和用途： Nginx 由于其轻量级和高性能，成为了现代 web 开发中广泛使用的服务器软件，尤其在高并发、大流量的 web 环境中。它可以独立运行，也可以与其他 web 服务器如 Apache 结合使用，以提高网站的性能和可靠性。 高性能和高并发: Nginx 以其高性能、稳定性、低资源消耗和高并发处理能力而闻名，特别是在处理静态文件时效率极高。 反向代理和负载均衡: Nginx 常用作反向代理服务器，将来自客户端的请求转发到内部服务器，并返回内部服务器的响应给客户端。它还可以作为负载均衡器，将流量分发到多个服务器，以提高响应速度和容错能力。 静态文件服务: Nginx 可以高效地为客户端提供静态文件服务，包括 HTML、CSS、JavaScript 和图像文件。 HTTP 和 HTTPS 服务器: Nginx 可以作为 HTTP 和 HTTPS 服务器，提供安全的 web 服务。 邮件代理服务: Nginx 还可以作为 IMAP, POP3, 和 SMTP 代理服务器。 模块化设计: Nginx 采用模块化设计，拥有丰富的模块库和第三方模块，可以通过安装不同的模块来扩展其功能。 配置简单和灵活: Nginx 提供了灵活而直观的配置系统，使得配置和维护变得相对简单。 跨平台: Nginx 可以在多种操作系统上运行，包括 Linux、Windows、macOS 等。 Nginx常用的功能模块 静态资源部署 Rewrite地址重写 正则表达式 反向代理 负载均衡 轮询、加权轮询、ip_hash、url_hash、fair Web缓存 环境部署 高可用的环境 用户认证模块 ... Nginx的核心组成 二进制可执行文件 配置文件 错误日志记录 访问日志记录 nginx二进制可执行文件 nginx.conf配置文件 error.log错误的日志记录 access.log访问日志记录 "},"Nginx/基础篇/环境准备.html":{"url":"Nginx/基础篇/环境准备.html","title":"环境准备","keywords":"","body":"环境准备 官网 Nginx官网 https://nginx.org/en/ Nginx下载官网 https://nginx.org/en/download.html 服务器 查看内核 uname -a ----------------------------- [root@VM-4-14-centos ~]# uname -a Linux VM-4-14-centos 3.10.0-1160.88.1.el7.x86_64 #1 SMP Tue Mar 7 15:41:52 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux 准备一个内核为2.6及以上版本的操作系统，因为linux2.6及以上内核才 支持epoll,而Nginx需要解决高并发压力问题是需要用到epoll，所以我们需要有这样的版本要求。 确保联网 ping baidu.com --------------------------- [root@VM-4-14-centos ~]# ping baidu.com PING baidu.com (39.156.66.10) 56(84) bytes of data. 64 bytes from 39.156.66.10 (39.156.66.10): icmp_seq=1 ttl=249 time=36.2 ms 64 bytes from 39.156.66.10 (39.156.66.10): icmp_seq=2 ttl=249 time=35.7 ms 64 bytes from 39.156.66.10 (39.156.66.10): icmp_seq=3 ttl=249 time=35.6 ms 64 bytes from 39.156.66.10 (39.156.66.10): icmp_seq=4 ttl=249 time=35.6 ms 64 bytes from 39.156.66.10 (39.156.66.10): icmp_seq=5 ttl=249 time=35.6 ms 64 bytes from 39.156.66.10 (39.156.66.10): icmp_seq=6 ttl=249 time=35.6 ms ^C --- baidu.com ping statistics --- 6 packets transmitted, 6 received, 0% packet loss, time 5007ms rtt min/avg/max/mdev = 35.672/35.779/36.220/0.294 ms 防火墙 查看防火墙状态 systemctl status firewalld ------------------------ [root@VM-4-14-centos ~]# systemctl status firewalld ● firewalld.service - firewalld - dynamic firewall daemon Loaded: loaded (/usr/lib/systemd/system/firewalld.service; enabled; vendor preset: enabled) Active: active (running) since Fri 2023-11-03 11:23:51 CST; 29s ago Docs: man:firewalld(1) Main PID: 28655 (firewalld) Tasks: 2 Memory: 27.6M CGroup: /system.slice/firewalld.service └─28655 /usr/bin/python2 -Es /usr/sbin/firewalld --nofork --nopid 暂时关闭防火墙，重启服务器，防火墙重新打开 systemctl stop firewalld ------------------------ [root@VM-4-14-centos ~]# systemctl stop firewalld [root@VM-4-14-centos ~]# systemctl status firewalld ● firewalld.service - firewalld - dynamic firewall daemon Loaded: loaded (/usr/lib/systemd/system/firewalld.service; enabled; vendor preset: enabled) Active: inactive (dead) since Fri 2023-11-03 11:25:46 CST; 5s ago Docs: man:firewalld(1) Process: 28655 ExecStart=/usr/sbin/firewalld --nofork --nopid $FIREWALLD_ARGS (code=exited, status=0/SUCCESS) Main PID: 28655 (code=exited, status=0/SUCCESS) Nov 03 11:23:49 VM-4-14-centos systemd[1]: Starting firewalld - dynamic firewall daemon... Nov 03 11:23:51 VM-4-14-centos systemd[1]: Started firewalld - dynamic firewall daemon. Nov 03 11:23:51 VM-4-14-centos firewalld[28655]: WARNING: AllowZoneDrifting is enabled. This is considered an insecure configuration option. It ... it now. Nov 03 11:23:53 VM-4-14-centos firewalld[28655]: WARNING: COMMAND_FAILED: '/usr/sbin/iptables -w10 -D FORWARD -i docker0 -o docker0 -j DROP' fai...chain?). Nov 03 11:23:53 VM-4-14-centos firewalld[28655]: WARNING: COMMAND_FAILED: '/usr/sbin/iptables -w10 -D FORWARD -i br-b53c4fb66e85 -o br-b53c4fb66...chain?). Nov 03 11:25:45 VM-4-14-centos systemd[1]: Stopping firewalld - dynamic firewall daemon... Nov 03 11:25:46 VM-4-14-centos systemd[1]: Stopped firewalld - dynamic firewall daemon. Hint: Some lines were ellipsized, use -l to show in full. 永久关闭防火墙，重启服务器，防火墙依然关闭 systemctl disable firewalld ----------------------------- [root@VM-4-14-centos ~]# systemctl disable firewalld Removed symlink /etc/systemd/system/dbus-org.fedoraproject.FirewallD1.service. Removed symlink /etc/systemd/system/multi-user.target.wants/firewalld.service. [root@VM-4-14-centos ~]# systemctl status firewalld ● firewalld.service - firewalld - dynamic firewall daemon Loaded: loaded (/usr/lib/systemd/system/firewalld.service; disabled; vendor preset: enabled) Active: inactive (dead) since Fri 2023-11-03 11:25:46 CST; 2min 34s ago Docs: man:firewalld(1) Main PID: 28655 (code=exited, status=0/SUCCESS) Nov 03 11:23:49 VM-4-14-centos systemd[1]: Starting firewalld - dynamic firewall daemon... Nov 03 11:23:51 VM-4-14-centos systemd[1]: Started firewalld - dynamic firewall daemon. Nov 03 11:23:51 VM-4-14-centos firewalld[28655]: WARNING: AllowZoneDrifting is enabled. This is considered an insecure configuration option. It ... it now. Nov 03 11:23:53 VM-4-14-centos firewalld[28655]: WARNING: COMMAND_FAILED: '/usr/sbin/iptables -w10 -D FORWARD -i docker0 -o docker0 -j DROP' fai...chain?). Nov 03 11:23:53 VM-4-14-centos firewalld[28655]: WARNING: COMMAND_FAILED: '/usr/sbin/iptables -w10 -D FORWARD -i br-b53c4fb66e85 -o br-b53c4fb66...chain?). Nov 03 11:25:45 VM-4-14-centos systemd[1]: Stopping firewalld - dynamic firewall daemon... Nov 03 11:25:46 VM-4-14-centos systemd[1]: Stopped firewalld - dynamic firewall daemon. Hint: Some lines were ellipsized, use -l to show in full. 停用selinux selinux(security-enhanced linux),美国安全局对于强制访问控制的实现，在linux2.6内核以后的版本中，selinux已经成功内核中的一部分。 可以说selinux是linux史上最杰出的新安全子系统之一。 虽然有了 selinux，我们的系统会更安全，但是在学习Nginx的历程中，会多很多设置，所以建议将selinux进行关闭。 查看状态 [root@VM-4-14-centos ~]# sestatus SELinux status: disabled 修改状态 vim /etc/selinux/config 修改SELINUX=disabled --------------------------------- [root@VM-4-14-centos ~]# cat /etc/selinux/config # This file controls the state of SELinux on the system. # SELINUX= can take one of these three values: # enforcing - SELinux security policy is enforced. # permissive - SELinux prints warnings instead of enforcing. # disabled - No SELinux policy is loaded. SELINUX=disabled # SELINUXTYPE= can take one of three values: # targeted - Targeted processes are protected, # minimum - Modification of targeted policy. Only selected processes are protected. # mls - Multi Level Security protection. SELINUXTYPE=targeted 安装Nginx 安装方式 通过Nginx源码 源码简单安装 源码复杂安装 通过yum安装 源码安装提前准备 GCC编译器 Nginx是使用C语言编写的程序，因此想要运行Nginx就需要安装一个编译工具。 GCC就是一个开源的编译器集合，用于处理各种各样的语言， 其中就包含了C语言。 ​ 使用命令yum install -y gcc来安装 安装成功后，可以通过gcc --version来查看gcc是否安装成功 PCRE Nginx在编译过程中需要使用到PCRE库(perl Compatible Regular Expressoin 兼容正则表达式库)，因为在Nginx的Rewrite模块和http核心模块都会使用到PCRE正则表达式语法。 可以使用命令yum install -y pcre pcre-devel来进行安装 安装成功后，可以通过rpm -qa pcre pcre-devel来查看是否安装成功 zlib zlib库提供了开发人员的压缩算法，在Nginx的各个模块中需要使用gzip 压缩，所以我们也需要提前安装其库及源代码zlib和zlib-devel 可以使用命令yum install -y zlib zlib-devel来进行安装 安装成功后，可以通过rpm -qa zlib zlib-devel来查看是否安装成功 OpenSSL OpenSSL是一个开放源代码的软件库包，应用程序可以使用这个包进行安全通信，并且避免被窃听。 SSL:Secure Sockets Layer安全套接协议的缩写，可以在Internet上提供 秘密性传输，其目标是保证两个应用间通信的保密性和可靠性。 在 Nginx中，如果服务器需要提供安全网页时就需要用到OpenSSL库，所以我们需要对OpenSSL的库文件及它的开发安装包进行一个安装。 可以使用命令yum install -y openssl openssl-devel来进行安装 安装成功后，可以通过rpm -qa openssl openssl-devel来查看是否安装成功 上述命令，一个个来的话比较麻烦，我们也可以通过一条命令来进行安装进行全部安装。 yum install -y gcc pcre pcre-devel zlib zlib-devel openssl openssl-devel （一）源码简单安装 下载源码 wget http://nginx.org/download/nginx-1.16.1.tar.gz 将下载的资源进行包管理 mkdir -p nginx/core mv nginx-1.16.1.tar.gz nginx/core 解压 tar -xzf nginx-1.16.1.tar.gz 进入解压后的文件夹，发现configure文件 使用./configure生成Makefile文件 [root@VM-4-14-centos nginx-1.24.0]# pwd /root/nginx/core/nginx-1.24.0 [root@VM-4-14-centos nginx-1.24.0]# ll total 844 drwxr-xr-x 6 www www 4096 Nov 2 08:26 auto -rw-r--r-- 1 www www 323312 Apr 11 2023 CHANGES -rw-r--r-- 1 www www 494234 Apr 11 2023 CHANGES.ru drwxr-xr-x 2 www www 4096 Nov 2 08:26 conf -rwxr-xr-x 1 www www 2611 Apr 11 2023 configure drwxr-xr-x 4 www www 4096 Nov 2 08:26 contrib drwxr-xr-x 2 www www 4096 Nov 2 08:26 html -rw-r--r-- 1 www www 1397 Apr 11 2023 LICENSE -rw-r--r-- 1 root root 438 Nov 2 08:32 Makefile drwxr-xr-x 2 www www 4096 Nov 2 08:26 man drwxr-xr-x 3 root root 4096 Nov 2 08:33 objs -rw-r--r-- 1 www www 49 Apr 11 2023 README drwxr-xr-x 9 www www 4096 Nov 2 08:26 src 编译和安装 make && make install （二）yum安装 安装yum-utils yum install -y yum-utils 安装Nginx yum install nginx 如果找不到nginx，需要设置yum仓库源 添加yum源文件（可选的） 通常源文件会放在 /etc/yum.repos.d/ 目录下。 vim /etc/yum.repos.d/nginx.repo 1 [nginx-stable] 2 name=nginx stable repo 3 baseurl=http://nginx.org/packages/centos/$releasever/ $basearch/ 4 gpgcheck=1 5 enabled=1 6 gpgkey=https://nginx.org/keys/nginx_signing.key 7 module_hotfixes=true 8 9 [nginx-mainline] 10 name=nginx mainline repo 11 baseurl=http://nginx.org/packages/mainline/centos/$re leasever/$basearch/ 12 gpgcheck=1 13 enabled=0 14 gpgkey=https://nginx.org/keys/nginx_signing.key 15 module_hotfixes=true 在源文件中，你需要指定仓库的名称、URL、以及其他相关的信息。 以下是一个源文件的基本结构： [myrepo] name=My Repository baseurl=http://myrepo.com/repo/$releasever/$basearch/ enabled=1 gpgcheck=0 [myrepo] 是仓库的唯一标识符。 name 是仓库的描述性名称。 baseurl 是仓库的 URL。 enabled=1 表示这个仓库是启用的。 gpgcheck=0 表示不进行 GPG 签名检查。如果仓库的包是签名的，你应该设置为 gpgcheck=1 并提供 GPG 公钥。 ​ 检查新的仓库是否已经被正确添加： ​ yum repolist 查看是否安装成功 yum list | grep nginx 查看位置 whereis nginx 启动测试 源码简单安装和yum安装的差异: ./nginx -V,通过该命令可以查看到所安装Nginx 的版本及相关配置信息。 简单安装 yum安装 解压Nginx源文件 [root@VM-4-14-centos test]# tar -xzf nginx-1.24.0.tar.gz [root@VM-4-14-centos test]# ll total 1092 drwxr-xr-x 8 www www 4096 Apr 11 2023 nginx-1.24.0 -rw-r--r-- 1 root root 1112471 Nov 3 12:17 nginx-1.24.0.tar.gz [root@VM-4-14-centos test]# cd nginx-1.24.0/ [root@VM-4-14-centos nginx-1.24.0]# ll total 836 drwxr-xr-x 6 www www 4096 Nov 3 12:17 auto -rw-r--r-- 1 www www 323312 Apr 11 2023 CHANGES -rw-r--r-- 1 www www 494234 Apr 11 2023 CHANGES.ru drwxr-xr-x 2 www www 4096 Nov 3 12:17 conf -rwxr-xr-x 1 www www 2611 Apr 11 2023 configure drwxr-xr-x 4 www www 4096 Nov 3 12:17 contrib drwxr-xr-x 2 www www 4096 Nov 3 12:17 html -rw-r--r-- 1 www www 1397 Apr 11 2023 LICENSE drwxr-xr-x 2 www www 4096 Nov 3 12:17 man -rw-r--r-- 1 www www 49 Apr 11 2023 README drwxr-xr-x 9 www www 4096 Nov 3 12:17 src 文件/文件夹 解释 auto 编译相关的脚本 CHANGES 版本变更记录 CHANGES.ru 俄罗斯文的版本变更记录 conf 默认的配置文件 configure nginx软件的自动脚本程序,是一个比较重要的文件作用：(1)检测环境及根据环境检测结果生成C代码 (2)生成编译代码需要的Makefile文件 contrib 存放的是几个特殊的脚本文件，其中README中对脚本有着详细的说明 html 存放的是Nginx自带的两个html页面，访问Nginx的首页和错误页面 LICENSE 许可证的相关描述文件 man nginx的man手册 README Nginx的阅读指南 src Nginx的源代码 （三）源码复杂安装 这种方式和简单的安装配置不同的地方在第一步，通过 ./configure 来 对编译参数进行设置，需要我们手动来指定。 参数 说明 PATH 和路径相关的配置信息 with 是启动模块，默认是关闭的 without 是关闭模块，默认是开启的 --prefix=PATH 指向Nginx的安装目录，默认值为/usr/local/nginx --sbin-path=PATH 指向(执行)程序文件(nginx)的路径,默认值为\\/sbin/nginx --modules-path=PATH 指向Nginx动态模块安装目录，默认值为\\/modules --conf-path=PATH 指向配置文件(nginx.conf)的路径,默认值为 \\/conf/nginx.conf --error-log-path=PATH 指向错误日志文件的路径,默认值为\\/logs/error.log --http-log-path=PATH 指向访问日志文件的路径,默认值为\\/logs/access.log --pid-path=PATH 指向Nginx启动后进行ID的文件路径，默认值为\\/logs/nginx.pid --lock-path=PATH 指向Nginx锁文件的存放路径,默认值为\\/logs/nginx.lock 安装命令 在使用安装命令之前，需要将之前服务器已经安装的nginx进行卸载 ./configure --prefix=/usr/local/nginx \\ --sbin-path=/usr/local/nginx/sbin/nginx \\ --modules-path=/usr/local/nginx/modules \\ --conf-path=/usr/local/nginx/conf/nginx.conf \\ --error-log-path=/usr/local/nginx/logs/error.log \\ --http-log-path=/usr/local/nginx/logs/access.log \\ --pid-path=/usr/local/nginx/logs/nginx.pid \\ --lock-path=/usr/local/nginx/logs/nginx.lock 卸载 需要将nginx的进程关闭 ./nginx -s stop 将安装的nginx进行删除 rm -rf /usr/local/nginx 将安装包之前编译的环境清除掉 make clean "}}